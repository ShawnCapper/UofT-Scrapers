name: UofT Wireless Usage Scraper

on:
  schedule:
    # Run every minute
    - cron: '* * * * *'
  workflow_dispatch:  # Allow manual triggering
  push:
    paths:
      - 'Other-Wireless/**'
      - '.github/workflows/wireless-scraper.yml'

jobs:
  scrape-wireless-usage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create data directory
      run: |
        mkdir -p Other-Wireless/data
    
    - name: Run wireless usage scraper
      run: |
        cd Other-Wireless
        python wireless_usage.py
      env:
        TZ: America/Toronto  # Set timezone to Toronto
    
    - name: Check for data files
      run: |
        echo "Checking for generated data files..."
        ls -la Other-Wireless/data/ || echo "No data directory found"
        if [ -f Other-Wireless/wireless_scraper.log ]; then
          echo "=== Scraper Log ==="
          cat Other-Wireless/wireless_scraper.log
        fi
    
    - name: Commit and push data
      run: |
        cd Other-Wireless
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add data files
        git add data/*.csv || echo "No CSV files to add"
        git add wireless_scraper.log || echo "No log file to add"
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Create commit message with timestamp and data summary
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          COMMIT_MSG="üåê Wireless usage data update - $TIMESTAMP"
          
          # Add summary of data if historical file exists
          if [ -f data/wireless_usage_historical.csv ]; then
            TOTAL_RECORDS=$(wc -l < data/wireless_usage_historical.csv)
            COMMIT_MSG="$COMMIT_MSG ($TOTAL_RECORDS total records)"
          fi
          
          git commit -m "$COMMIT_MSG"
          git push
        fi
    
    - name: Generate summary report
      if: always()
      run: |
        cd Other-Wireless
        echo "## UofT Wireless Usage Scraper Report" > scraper_report.md
        echo "**Run Time:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> scraper_report.md
        echo "" >> scraper_report.md
        
        if [ -f data/wireless_usage_historical.csv ]; then
          echo "### Data Summary" >> scraper_report.md
          TOTAL_RECORDS=$(tail -n +2 data/wireless_usage_historical.csv | wc -l)
          LATEST_RECORD=$(tail -n 1 data/wireless_usage_historical.csv)
          echo "- **Total Records:** $TOTAL_RECORDS" >> scraper_report.md
          echo "- **Latest Record:** \`$LATEST_RECORD\`" >> scraper_report.md
          echo "" >> scraper_report.md
          
          # Show latest data for each campus
          echo "### Current Usage by Campus" >> scraper_report.md
          echo "| Campus | Current Usage | Percentage |" >> scraper_report.md
          echo "|--------|---------------|------------|" >> scraper_report.md
          
          # Extract latest data for each campus
          if [ -f data/wireless_usage_historical.csv ]; then
            echo "Generating campus usage table..."
            tail -n 10 data/wireless_usage_historical.csv | while IFS=',' read -r timestamp campus now_usage now_percentage daily_peak weekly_peak monthly_peak yearly_peak yearly_percentage; do
              if [ "$campus" != "campus" ]; then  # Skip header
                percentage_display=${now_percentage:-"N/A"}
                if [ "$percentage_display" != "N/A" ]; then
                  percentage_display="${percentage_display}%"
                fi
                echo "| $campus | $now_usage | $percentage_display |" >> scraper_report.md
              fi
            done
          fi
        else
          echo "‚ùå **No data file found - scraping may have failed**" >> scraper_report.md
        fi
        
        echo "" >> scraper_report.md
        if [ -f wireless_scraper.log ]; then
          echo "### Scraper Log (last 20 lines)" >> scraper_report.md
          echo "\`\`\`" >> scraper_report.md
          tail -n 20 wireless_scraper.log >> scraper_report.md
          echo "\`\`\`" >> scraper_report.md
        fi
        
        cat scraper_report.md
    
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: wireless-usage-data
        path: |
          Other-Wireless/data/*.csv
          Other-Wireless/wireless_scraper.log
          Other-Wireless/scraper_report.md
        retention-days: 30
